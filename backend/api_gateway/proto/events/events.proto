syntax = "proto3";

package events;

option go_package = "github.com/Slava02/SaintDiego/internal/proto/events";

import "google/protobuf/timestamp.proto";

// Enums
enum TimeSlotType {
  TIME_SLOT_TYPE_UNSPECIFIED = 0;
  TIME_SLOT_TYPE_SINGLE = 1;
  TIME_SLOT_TYPE_RECURRING = 2;
}

enum TimeSlotStatus {
  TIME_SLOT_STATUS_UNSPECIFIED = 0;
  TIME_SLOT_STATUS_ACTIVE = 1;
  TIME_SLOT_STATUS_ARCHIVED = 2;
}

enum RecurrenceFrequency {
  RECURRENCE_FREQUENCY_UNSPECIFIED = 0;
  RECURRENCE_FREQUENCY_DAILY = 1;
  RECURRENCE_FREQUENCY_WEEKLY = 2;
  RECURRENCE_FREQUENCY_MONTHLY = 3;
}

enum RecurrenceEndType {
  RECURRENCE_END_TYPE_UNSPECIFIED = 0;
  RECURRENCE_END_TYPE_NEVER = 1;
  RECURRENCE_END_TYPE_DATE = 2;
}

// Service definition
service EventService {
  // Time slots
  rpc GetTimeSlots(GetTimeSlotsRequest) returns (GetTimeSlotsResponse) {}
  rpc CreateTimeSlot(CreateTimeSlotRequest) returns (TimeSlot) {}
  rpc UpdateTimeSlot(UpdateTimeSlotRequest) returns (TimeSlot) {}
  rpc DeleteTimeSlot(DeleteTimeSlotRequest) returns (DeleteTimeSlotResponse) {}
  rpc ArchiveTimeSlot(ArchiveTimeSlotRequest) returns (TimeSlot) {}
  rpc ActivateTimeSlot(ActivateTimeSlotRequest) returns (TimeSlot) {}

  // Locations
  rpc GetLocations(GetLocationsRequest) returns (GetLocationsResponse) {}
  rpc CreateLocation(CreateLocationRequest) returns (Location) {}

  // Services
  rpc GetServices(GetServicesRequest) returns (GetServicesResponse) {}
}

// Request messages
message GetTimeSlotsRequest {
  TimeSlotStatus status = 1;
  google.protobuf.Timestamp start_date = 2;
  google.protobuf.Timestamp end_date = 3;
}

message CreateTimeSlotRequest {
  string title = 1;
  TimeSlotType type = 2;
  string location_id = 3;  // UUID
  int32 capacity = 4;
  google.protobuf.Timestamp start_date = 5;
  google.protobuf.Timestamp end_date = 6;
  repeated TimeSlotService services = 7;
  Recurrence recurrence = 8;
}

message UpdateTimeSlotRequest {
  string id = 1;  // UUID
  TimeSlot time_slot = 2;
}

message DeleteTimeSlotRequest {
  string id = 1;  // UUID
}

message ArchiveTimeSlotRequest {
  string id = 1;  // UUID
}

message ActivateTimeSlotRequest {
  string id = 1;  // UUID
}

message GetLocationsRequest {}

message CreateLocationRequest {
  string name = 1;
  string address = 2;
  string description = 3;
}

message GetServicesRequest {}


// Response messages
message GetTimeSlotsResponse {
  repeated TimeSlot time_slots = 1;
}

message DeleteTimeSlotResponse {
  bool success = 1;
}

message GetLocationsResponse {
  repeated Location locations = 1;
}

message GetServicesResponse {
  repeated ServiceType services = 1;
}

// Common messages
message TimeSlot {
  string id = 1;  // UUID
  string title = 2;
  TimeSlotType type = 3;
  string location_id = 4;  // UUID
  int32 capacity = 5;
  google.protobuf.Timestamp start_date = 6;
  google.protobuf.Timestamp end_date = 7;
  TimeSlotStatus status = 8;
  repeated TimeSlotService services = 9;
  Recurrence recurrence = 10;
}

message TimeSlotService {
  string service_type_id = 1;  // UUID
  int32 capacity = 2;
  int32 booking_window = 3;
  google.protobuf.Timestamp time = 4;
}

message Recurrence {
  RecurrenceFrequency frequency = 1;
  int32 interval = 2;
  RecurrenceEndType end_type = 3;
  google.protobuf.Timestamp end_value = 4;
}

message Location {
  string id = 1;  // UUID
  string name = 2;
  string address = 3;
  string description = 4;
}

message ServiceType {
  string id = 1;  // UUID
  string name = 2;
  string description = 3;
}

message Error {
  string code = 1;
  string message = 2;
  map<string, string> details = 3;
}
