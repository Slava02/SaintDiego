// Code generated by options-gen. DO NOT EDIT.
package v1

import (
	fmt461e464ebed9 "fmt"

	errors461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/errors"
	validator461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/validator"
)

type OptOptionsSetter func(o *Options)

func NewOptions(
	timeSlotUC ITimeSlotsUC,
	locationsUC ILocationsUC,
	servicesUC IServicesUC,
	options ...OptOptionsSetter,
) Options {
	o := Options{}

	// Setting defaults from field tag (if present)

	o.timeSlotUC = timeSlotUC

	o.locationsUC = locationsUC

	o.servicesUC = servicesUC

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func (o *Options) Validate() error {
	errs := new(errors461e464ebed9.ValidationErrors)
	errs.Add(errors461e464ebed9.NewValidationError("timeSlotUC", _validate_Options_timeSlotUC(o)))
	errs.Add(errors461e464ebed9.NewValidationError("locationsUC", _validate_Options_locationsUC(o)))
	errs.Add(errors461e464ebed9.NewValidationError("servicesUC", _validate_Options_servicesUC(o)))
	return errs.AsError()
}

func _validate_Options_timeSlotUC(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.timeSlotUC, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `timeSlotUC` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_locationsUC(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.locationsUC, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `locationsUC` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_servicesUC(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.servicesUC, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `servicesUC` did not pass the test: %w", err)
	}
	return nil
}
