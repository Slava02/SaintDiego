// Code generated by options-gen. DO NOT EDIT.
package serverclient

import (
	fmt461e464ebed9 "fmt"

	"github.com/getkin/kin-openapi/openapi3"
	errors461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/errors"
	validator461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/validator"
	"go.uber.org/zap"
)

type OptOptionsSetter func(o *Options)

func NewOptions(
	logger *zap.Logger,
	serverAddr string,
	allowOrigins []string,
	v1Swagger *openapi3.T,
	eventsAddr string,
	options ...OptOptionsSetter,
) Options {
	o := Options{}

	// Setting defaults from field tag (if present)

	o.logger = logger

	o.serverAddr = serverAddr

	o.allowOrigins = allowOrigins

	o.v1Swagger = v1Swagger

	o.eventsAddr = eventsAddr

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func (o *Options) Validate() error {
	errs := new(errors461e464ebed9.ValidationErrors)
	errs.Add(errors461e464ebed9.NewValidationError("logger", _validate_Options_logger(o)))
	errs.Add(errors461e464ebed9.NewValidationError("serverAddr", _validate_Options_serverAddr(o)))
	errs.Add(errors461e464ebed9.NewValidationError("allowOrigins", _validate_Options_allowOrigins(o)))
	errs.Add(errors461e464ebed9.NewValidationError("v1Swagger", _validate_Options_v1Swagger(o)))
	errs.Add(errors461e464ebed9.NewValidationError("eventsAddr", _validate_Options_eventsAddr(o)))
	return errs.AsError()
}

func _validate_Options_logger(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.logger, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `logger` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_serverAddr(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.serverAddr, "required,hostname_port"); err != nil {
		return fmt461e464ebed9.Errorf("field `serverAddr` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_allowOrigins(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.allowOrigins, "min=1"); err != nil {
		return fmt461e464ebed9.Errorf("field `allowOrigins` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_v1Swagger(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.v1Swagger, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `v1Swagger` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_eventsAddr(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.eventsAddr, "required,hostname_port"); err != nil {
		return fmt461e464ebed9.Errorf("field `eventsAddr` did not pass the test: %w", err)
	}
	return nil
}
