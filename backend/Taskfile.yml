# https://taskfile.dev
version: '3'

silent: true

vars:
  GO_MODULE: github.com/Slava02/SaintDiego
  GO_FILES:
    sh: find . -type f -name '*.go' -not -path "./vendor/*" -not -path "*.gen.go" | tr "\n" " "

  GOLANGCI_LINT_VERSION: v1.62.2
  GOLANGCI_LINT_CACHE:
    sh: echo "$HOME/Library/Caches"

  DEV_TOOLS: |
    github.com/daixiang0/gci@v0.13.5
    github.com/kazhuravlev/options-gen/cmd/options-gen@v0.33.1
    mvdan.cc/gofumpt@v0.7.0
    entgo.io/ent/cmd/ent@v0.14.0
    github.com/oapi-codegen/oapi-codegen/v2/cmd/oapi-codegen@v2.4.1
    go.uber.org/mock/mockgen@v0.5.0
    github.com/onsi/ginkgo/v2/ginkgo@v2.9.1

  DOCKER_COMPOSE_PATHS: |
    ./deploy/local/docker-compose.yml
    ./deploy/local/docker-compose.swagger-ui.yml

  DOCKER_COMPOSE_CMD: docker compose -f {{ .DOCKER_COMPOSE_PATHS | trim | splitLines | join " -f " }}

  ENT_SCHEMA: ./internal/store/schema
  ENT_TEMPLATE: ./internal/store/templates

  KEYCLOAK_REALM_PATH: ./deploy/local/saintDiego-realm.json

  CLIENT_V1_SRC: ./api/client.v1.swagger.yml
  CLIENT_V1_DST: ./internal/server-client/v1/server.gen.go
  CLIENT_V1_PKG: clientv1

  E2E_CLIENT_V1_DST: ./tests/e2e/api/client/v1/client.gen.go
  E2E_CLIENT_V1_PKG: apiclientv1

  TYPES: |
    RequestID
    UserID
  TYPES_PKG: types
  TYPES_DST: ./internal/types/types.gen.go

tasks:
  default:
    cmds:
      - task: tidy
      - task: fmt
      - task: lint
      - task: tests
      - task: build

  tidy:
    - echo "- Tidy"
    - go mod tidy
    - task: vendor

  vendor:
    - echo "- Vendor"
    - go mod vendor

  fmt:
    - echo "- Format"
    - gofumpt -w {{.GO_FILES}}
    - gci write -s standard -s default -s "prefix({{.GO_MODULE}})" --skip-generated {{.GO_FILES}}

  lint:
    cmds:
      - echo "- Lint"
      - mkdir -p {{.GOLANGCI_LINT_CACHE}}
      - task: lint:cmd
        vars: {CLI_ARGS: "run -v --fix --timeout=5m ./..."}

  lint:cmd:
    cmds:
      - |
        docker run --rm \
          -v "$(pwd):/app" -w /app \
          -v "{{.GOLANGCI_LINT_CACHE}}:/root/.cache" \
          golangci/golangci-lint:{{.GOLANGCI_LINT_VERSION}} \
          golangci-lint {{.CLI_ARGS}}

  tests:
    cmds:
      - echo "- Tests"
      - go test -race ./...

  tests:integration:
    env:
      LOG_LEVEL: info
      KEYCLOAK_REALM: Bank
      KEYCLOAK_CLIENT_ID: integration-testing
      KEYCLOAK_CLIENT_SECRET: d1Z7wY9JfveYnOW3cdMqYJ2s4ChJ0u49
      KEYCLOAK_TEST_USER: integration-testing
      KEYCLOAK_TEST_PASSWORD: integration-testing

    cmds:
      - echo "- Integration tests"
      - go test -tags integration -count 1 -race ./...


  build:
    cmds:
      - echo "- Build"
      - go build ./cmd/booking-service

  dev-tools:install:
    cmds:
      - echo "- Install dev tools"
      - |
        {{ range $tool := .DEV_TOOLS | trim | splitLines -}}
        go install {{ $tool }}
        {{ end }}

  generate:
    - echo "Run go generate..."
    - go generate ./...
    - task: gen:types
    - task: ent:gen
    - task: gen:api

  gen:types:
    cmds:
      - echo "Generate types..."
      - go run ./cmd/gen-types {{.TYPES_PKG}} {{ .TYPES | trim | splitLines | join "," }} {{.TYPES_DST}}

  gen:api:
    cmds:
      - echo "Generate client server..."
      - oapi-codegen --old-config-style -generate types,server,spec -package {{.CLIENT_V1_PKG}} {{.CLIENT_V1_SRC}} > {{.CLIENT_V1_DST}}
      - task: tidy

  deps:
    cmds:
      - echo "- Starting dependencies"
      - "{{.DOCKER_COMPOSE_CMD}} {{.CLI_ARGS}} up -d"


  deps:cmd:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} {{.CLI_ARGS}}"

  deps:status:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} ps"

  deps:logs:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} logs {{.SERVICE}}"

  deps:stop:
    cmds:
      - echo "- Stopping running services"
      - "{{.DOCKER_COMPOSE_CMD}} {{.CLI_ARGS}} stop"

  deps:reset-kc:
    cmds:
      - task: deps:reset
        vars:
          SERVICE: keycloak

  deps:reset-swagger:
    cmds:
      - task: deps:reset
        vars:
          SERVICE: swagger-ui

  deps:reset:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} rm -fsv {{.SERVICE}}"
      - "{{.DOCKER_COMPOSE_CMD}} up -d {{.SERVICE}}"

  kc:export:
    cmds:
      - # https://www.keycloak.org/server/importExport
      - echo "Dump Keycloak Bank realm..."
      - cmd: docker exec -it saintdiego-keycloak-1 /opt/keycloak/bin/kc.sh export --users realm_file --file /tmp/saintDiego-realm.json --realm SaintDiego
        ignore_error: true
      - docker cp saintdiego-keycloak-1:/tmp/saintDiego-realm.json {{.KEYCLOAK_REALM_PATH}}
      - echo "Exported in {{.KEYCLOAK_REALM_PATH}}"
